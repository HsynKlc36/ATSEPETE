<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      internalLogLevel="Info"
      internalLogFile=".\internal_logs\internallog.txt">

  <targets async="true">
    <target name="logfile" xsi:type="File"
				fileName=".\logs\${shortdate}_logfile.txt"  
				layout="${longdate} ${level:uppercase=true} ${message}"
        archiveAboveSize="1048576"
        archiveNumbering="Sequence"
        maxArchiveFiles="7"
        keepFileOpen="false"
        concurrentWrites="true"
        encoding="iso-8859-2"
        maxArchiveDays="7"/>
 
    <target name="console" xsi:type="Console"
           layout="${longdate} ${uppercase:${level}} ${message} ${exception:format=ToString}" />
  </targets>

  <rules>
    <logger name="*" minlevel="Debug" writeTo="logfile" />
    <!-- bu şekilde min debug seçersek tüm debug,info,warn,error,fatal loglamalarını tutacaktır fakat info secilirse debug alınmayacaktır.-->
    
    <!--<logger name="*" minlevel="Debug" writeTo="logfile" />-->
    <!--bir üst satırda kurallarda yeni loggerlar oluşturup loglama için hedef yerler gösterebiliriz-->
  </rules>
</nlog>

<!-- Bu örnekte, async özelliği kullanılarak, hedefler asenkron bir şekilde çalışacak şekilde ayarlandı. fileName=> özelliği ile dosya adı ve yolu belirlendi, layout=> özelliği ile log kaydının nasıl biçimlendirileceği belirlendi.-->
<!--archiveAboveSize => dosya boyutunu
maxArchiveDays=> arşivi kaç gün saklayacağını

maxArchiveFiles=> maxArchiveFiles, bir log dosyasının maksimum arşivlenmiş sürümlerinin sayısını belirler. Yani, bir log dosyası belirtilen arşivleme kriterlerini (zaman veya boyut) karşıladığında, eski sürümler yeni bir sürümle değiştirilir ve bu nedenle belirtilen maksimum sayıya ulaşıncaya kadar arşivlenmiş sürümlerin silinmesine neden olur. Bu özellik, log dosyalarının gereksiz yere disk alanı tüketmesini önlemeye yardımcı olur ve yönetimi daha kolay hale getirir.

keepFileOpen=> özelliği, dosyanın açık kalmasını sağlar

concurrentWrites=> özelliği ise çoklu iş parçacıkları kullanılarak yazma işlemlerinin aynı anda yapılmasına olanak tanır. 

encoding=> özelliği ise karakter kodlamasını belirtir.


-->