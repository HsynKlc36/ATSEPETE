@model IEnumerable<AtSepete.UI.Areas.Customer.Models.ShopVMs.CustomerShopProductDetailsVM>

@{
    ViewData["Title"] = "Ürün Detayları";
    Layout = "_CustomerLayout";
    var shopProductDetail = Model.FirstOrDefault();
    var filterMarketPrice = Model.Select(x => new
    {
        ProductId = x.ProductId,
        ProductPhotoPath = x.ProductPhotoPath,
        ProductPrice = x.ProductPrice,
        ProductName = x.ProductName,
        ProductTitle = x.ProductTitle,
        MarketId = x.MarketId,
        MarketName = x.MarketName,
        ProductUnit = x.ProductUnit,
        ProductQuantity = x.ProductQuantity,
        ProductStock = x.ProductStock
    }).ToList();

}
<style>
    .item-container {
        display: flex;
        flex-wrap: wrap;
        justify-content: flex-start;
    }

    .item {
        flex-basis: calc(25% - 10px);
        margin-bottom: 20px;
    }

</style>


<div class="container row">
    <div class="col-lg-4">
    </div>
    <div class="product-image col-lg-4">

        <img src="@shopProductDetail.ProductPhotoPath" alt="@shopProductDetail.ProductName" />

    </div>

    <div class="product-info col-lg-4">

        <h2>@shopProductDetail.ProductName.ToUpper()</h2>

        <input type="hidden" @shopProductDetail.ProductId>
        <input type="hidden" @shopProductDetail.MarketId>

        <p><strong>Ürün Markası:</strong> @shopProductDetail.ProductTitle.ToUpper()</p>
        <p><strong>Ürün Miktarı:</strong> @shopProductDetail.ProductQuantity @shopProductDetail.ProductUnit</p>
        <p><strong>Kategori:</strong> @shopProductDetail.CategoryName</p>

    </div>
</div>
<div class="container row">
    <div class="col-lg-4">
    </div>
    <div class="product-image col-lg-8">

        <h3>Ürün Açıklaması</h3>

        <p>@shopProductDetail.ProductDescription</p>

    </div>
</div>
<div class="container row">
    <div class="col-lg-8">
    </div>
    <div class="item-container product-image col-lg-4">
        <div class="col-lg-12" style="margin-top: 0;">
            <h3>Tüm Satıcılar</h3>
        </div>
        <div class="row" id="filter" style="margin-left: -15px;">
            
        </div>
    </div>
</div>
<script src="~/js/shopping_cart.js"></script>


<script>
    var productList = @Html.Raw(Json.Serialize(filterMarketPrice)); // Veri listesi
    var container = document.querySelector('#filter'); // Container elementi

    // Her bir ürün için döngü
    for (var i = 0; i < productList.length; i++) {
        var item = productList[i];

        // Ürün bileşenini oluştur
        var productDiv = document.createElement('div');
        productDiv.className = 'item ml-4';

        // Ürün fotoğrafı
        var imgContainer = document.createElement('div');
        imgContainer.style.position = 'relative';
        imgContainer.style.width = '100px';
        imgContainer.style.height = '100px';

        var img = document.createElement('img');
        img.src = item.productPhotoPath;
        img.style.width = '100%';
        img.style.height = '100%';

        // Stok durumuna göre fotoğraf stilini ve metnini ayarla
        if (item.productStock <= 0) {
            var outOfStockLabel = document.createElement("div");
            outOfStockLabel.className = "out-of-stock-label";
            outOfStockLabel.innerText = "Stoklar Tükendi";
            outOfStockLabel.style.color = 'white';
            outOfStockLabel.style.backgroundColor = '#d9767673';
            outOfStockLabel.style.position = 'absolute';
            outOfStockLabel.style.top = '0';
            outOfStockLabel.style.left = '0';
            outOfStockLabel.style.padding = '1px';
            outOfStockLabel.style.zIndex = '2';
                

            imgContainer.appendChild(outOfStockLabel);
        }
        else if(item.productStock>0 && item.productStock<10){
            var outOfStockLabel = document.createElement("div");
            outOfStockLabel.className = "out-of-stock-label";
            outOfStockLabel.innerText = "Sınırlı Stoklar";
            outOfStockLabel.style.color = 'white';
            outOfStockLabel.style.backgroundColor = '#d9767673';
            outOfStockLabel.style.position = 'absolute';
            outOfStockLabel.style.top = '0';
            outOfStockLabel.style.left = '0';
            outOfStockLabel.style.padding = '1px';
            outOfStockLabel.style.zIndex = '2';


            imgContainer.appendChild(outOfStockLabel);
        }

        imgContainer.appendChild(img);
        productDiv.appendChild(imgContainer);

        // Diğer ürün bilgileri
        var marketName = document.createElement('span');
        marketName.style.color = 'rgb(225 136 156 / 96%)';
        marketName.innerText = item.marketName.toUpperCase();
        var productPrice = document.createElement('p');
        productPrice.innerText = item.productPrice + ' TL';

        // Ürün bileşenini oluşturulan sıraya göre düzenle
        productDiv.appendChild(marketName);
        productDiv.appendChild(productPrice);

        // Sepete ekle düğmesi
        if (item.productStock > 0) {
            var addToCartButton = document.createElement('input');
            addToCartButton.type = 'button';
            addToCartButton.value = 'Ekle';
            addToCartButton.className = 'btn btn-primary';
            addToCartButton.style.width = '100px';
            addToCartButton.style.backgroundColor = '#f7cdd0';
            addToCartButton.style.borderColor = '#f7cdd0';


            addToCartButton.onclick = (function (item) {
                return function () {
                    addToCartProductDetails(item.productId, item.marketId, item.productTitle, item.productName, item.productQuantity, item.productUnit, item.marketName, item.productPrice, item.productPhotoPath, item.productStock);
                };
            })(item);

            productDiv.appendChild(addToCartButton);
        }

        container.appendChild(productDiv);
    }

</script>
<script>
        function addToCartProductDetails(productId, marketId, productTitle, productName, productQuantity, productUnit, marketName, productPrice, productPhotoPath, productStock) {

        var quantity = 1; // Varsayılan olarak eklenen ürünün miktarı 1

        // Local Storage'dan sepet verilerini al(js nesnesi olarak)
        var cart = getCartFromLocalStorage();

        // Ürünü sepete ekle
        var existingItem = cart.find(item => item.productId === productId && item.marketId === marketId);
        if (existingItem) {
            existingItem.quantity += quantity;
        }
        else {
            cart.push({

                productId: productId,
                marketId: marketId,
                productTitle: productTitle,
                productName: productName,
                productQuantity: productQuantity,
                productUnit: productUnit,
                productPhotoPath: productPhotoPath,
                marketName: marketName,
                productPrice: productPrice,
                productStock: productStock,
                quantity: quantity
            });
        }
        //güncellenen  Sepet verilerini Local Storage'a kaydet
        saveCartToLocalStorage(cart);
        //fonksiyonu çağrılarak, sepet öğe sayısı  güncellenir.
        updateCartItemCount();
        location.reload();
    }
</script>
